{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","getCommentById","identification","commentsFromServer","filter","postId","postsFromServer","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"6z8IAEaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAEED,EAFFC,KACAC,EACEF,EADFE,MAGF,OACE,8BACG,eAED,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,QCbII,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BJ,EAGEI,EAHFJ,MACAD,EAEEK,EAFFL,KACAM,EACED,EADFC,KAGF,OACE,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGF,IAGF,OAED,mBAAGE,UAAU,qBAAqBC,KAAI,iBAAYF,GAAlD,SACGA,OAIL,qBAAKC,UAAU,oBAAf,SACGI,QCnBIC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQK,WCFrCC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAP,EAGEM,EAHFN,KACAE,EAEEI,EAFFJ,SACAT,EACEa,EADFb,KAGF,OACE,qBAAKG,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,IAGH,cAAC,EAAD,CAAUd,KAAMA,IAEhB,mBAAGG,UAAU,iBAAb,SACGI,IAGFE,EAASM,OAAS,EACjB,cAAC,EAAD,CAAaN,SAAUA,IAEvB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,uCC5BCO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,U,qBCMtC,SAASO,EAAeC,GACtB,OAAOC,EACJC,QAAO,qBAAGC,SAAwBH,KAGhC,IAAMF,EAAQM,EAAgBb,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cb,MAZmBmB,EAYDN,EAAKW,OAXhBC,EACJC,MAAK,qBAAGf,KAAgBQ,MAW3BV,SAAUS,EAAeL,EAAKF,MAbhC,IAAqBQ,KAgBRQ,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUc,MAAOA,QCrBrBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c1b6bc15.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <p>\n      {' Posted by  '}\n\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  );\n};\n","export const CommentInfo = ({ comment }) => {\n  const {\n    email,\n    name,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        {' by '}\n\n        <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    comments,\n    user,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <UserInfo user={user} />\n\n        <p className=\"PostInfo__body\">\n          {body}\n        </p>\n\n        {comments.length > 0 ? (\n          <CommentList comments={comments} />\n        ) : (\n          <>\n            <hr />\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(identification) {\n  return usersFromServer\n    .find(({ id }) => id === identification);\n}\n\nfunction getCommentById(identification) {\n  return commentsFromServer\n    .filter(({ postId }) => postId === identification);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}